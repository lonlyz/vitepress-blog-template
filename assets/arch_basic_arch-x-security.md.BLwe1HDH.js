import{_ as e,c as t,ai as r,o}from"./chunks/framework.BrYByd3F.js";const u=JSON.parse('{"title":"架构 - 保障架构安全","description":"","frontmatter":{},"headers":[],"relativePath":"arch/basic/arch-x-security.md","filePath":"arch/basic/arch-x-security.md","lastUpdated":1737706346000}'),i={name:"arch/basic/arch-x-security.md"};function c(h,a,l,s,n,d){return o(),t("div",null,a[0]||(a[0]=[r('<h1 id="架构-保障架构安全" tabindex="-1">架构 - 保障架构安全 <a class="header-anchor" href="#架构-保障架构安全" aria-label="Permalink to &quot;架构 - 保障架构安全&quot;">​</a></h1><blockquote><p>本文对架构安全知识点梳理。@pdai</p></blockquote><h2 id="架构安全" tabindex="-1">架构安全 <a class="header-anchor" href="#架构安全" aria-label="Permalink to &quot;架构安全&quot;">​</a></h2><p>对已知问题有有效的解决方案，对未知/潜在问题建立发现和防御机制。对于安全问题，首先要提高安全意识，建立一个安全的有效机制，从政策层面，组织层面进行保障。比如服务器密码不能泄露，密码每月更新，并且三次内不能重复；每周安全扫描等。以制度化的方式，加强安全体系的建设。同时，需要注意与安全有关的各个环节。安全问题不容忽视。包括基础设施安全，应用系统安全，数据保密安全等。</p><h3 id="基础设施安全" tabindex="-1">基础设施安全 <a class="header-anchor" href="#基础设施安全" aria-label="Permalink to &quot;基础设施安全&quot;">​</a></h3><p>硬件采购，操作系统，网络环境方面的安全。一般采用，正规渠道购买高质量的产品，选择安全的操作系统，及时修补漏洞，安装杀毒软件防火墙。防范病毒，后门。设置防火墙策略，建立DDOS防御系统，使用攻击检测系统，进行 子网隔离等手段。</p><h3 id="应用系统安全" tabindex="-1">应用系统安全 <a class="header-anchor" href="#应用系统安全" aria-label="Permalink to &quot;应用系统安全&quot;">​</a></h3><p>在程序开发时，对已知常用问题，使用正确的方式，在代码层面解决掉。防止跨站脚本攻击（XSS），注入攻击，跨站请求伪造（CSRF），错误信息，HTML注释，文件上传，路径遍历等。还可以使用Web应用防火墙（比如：ModSecurity），进行安全漏洞扫描等措施，加强应用级别的安全。</p><h3 id="数据保密安全" tabindex="-1">数据保密安全 <a class="header-anchor" href="#数据保密安全" aria-label="Permalink to &quot;数据保密安全&quot;">​</a></h3><p>存储安全（存在在可靠的设备，实时，定时备份），保存安全（重要的信息加密保存，选择合适的人员复杂保存和检测等），传输安全（防止数据窃取和数据篡改）；</p><h3 id="其它-算法" tabindex="-1">其它 - 算法 <a class="header-anchor" href="#其它-算法" aria-label="Permalink to &quot;其它 - 算法&quot;">​</a></h3><p>常用的加解密算法（单项散列加密[MD5,SHA]，对称加密[DES,3DES,RC]），非对称加密[RSA]等。</p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',13)]))}const _=e(i,[["render",c]]);export{u as __pageData,_ as default};
