import{_ as a,c as n,ai as e,o as p}from"./chunks/framework.BrYByd3F.js";const t="/vitepress-blog-template/images/db/es/es-index-manage-1.png",i="/vitepress-blog-template/images/db/es/es-index-manage-2.png",l="/vitepress-blog-template/images/db/es/es-index-manage-3.png",o="/vitepress-blog-template/images/db/es/es-index-manage-4.png",c="/vitepress-blog-template/images/db/es/es-index-manage-5.png",r="/vitepress-blog-template/images/db/es/es-index-manage-7.png",u="/vitepress-blog-template/images/db/es/es-index-manage-8.png",d="/vitepress-blog-template/images/db/es/es-index-manage-9.png",g="/vitepress-blog-template/images/db/es/es-index-manage-10.png",h="/vitepress-blog-template/images/db/es/es-index-manage-11.png",m="/vitepress-blog-template/images/db/es/es-index-manage-12.png",b="/vitepress-blog-template/images/db/es/es-index-manage-13.png",q="/vitepress-blog-template/images/db/es/es-index-manage-6.png",P=JSON.parse('{"title":"ES详解 - 索引：索引管理详解","description":"","frontmatter":{},"headers":[],"relativePath":"db/nosql-es/elasticsearch-x-index-mapping.md","filePath":"db/nosql-es/elasticsearch-x-index-mapping.md","lastUpdated":1737706346000}'),v={name:"db/nosql-es/elasticsearch-x-index-mapping.md"};function _(k,s,x,y,f,C){return p(),n("div",null,s[0]||(s[0]=[e(`<h1 id="es详解-索引-索引管理详解" tabindex="-1">ES详解 - 索引：索引管理详解 <a class="header-anchor" href="#es详解-索引-索引管理详解" aria-label="Permalink to &quot;ES详解 - 索引：索引管理详解&quot;">​</a></h1><blockquote><p>了解基本使用后，我们从索引操作的角度看看如何对索引进行管理。@pdai</p></blockquote><h2 id="索引管理的引入" tabindex="-1">索引管理的引入 <a class="header-anchor" href="#索引管理的引入" aria-label="Permalink to &quot;索引管理的引入&quot;">​</a></h2><p>我们在前文中增加文档时，如下的语句会动态创建一个customer的index：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /customer/_doc/1</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;John Doe&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>而这个index实际上已经自动创建了它里面的字段（name）的类型。我们不妨看下它自动创建的mapping：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;mappings&quot;: {</span></span>
<span class="line"><span>    &quot;_doc&quot;: {</span></span>
<span class="line"><span>      &quot;properties&quot;: {</span></span>
<span class="line"><span>        &quot;name&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;text&quot;,</span></span>
<span class="line"><span>          &quot;fields&quot;: {</span></span>
<span class="line"><span>            &quot;keyword&quot;: {</span></span>
<span class="line"><span>              &quot;type&quot;: &quot;keyword&quot;,</span></span>
<span class="line"><span>              &quot;ignore_above&quot;: 256</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>那么如果我们需要对这个建立索引的过程做更多的控制：比如想要确保这个索引有数量适中的主分片，并且在我们索引任何数据之前，分析器和映射已经被建立好。那么就会引入两点：第一个<strong>禁止自动创建索引</strong>，第二个是<strong>手动创建索引</strong>。</p><ul><li>禁止自动创建索引</li></ul><p>可以通过在 config/elasticsearch.yml 的每个节点下添加下面的配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>action.auto_create_index: false</span></span></code></pre></div><p>手动创建索引就是接下来文章的内容。</p><h2 id="索引的格式" tabindex="-1">索引的格式 <a class="header-anchor" href="#索引的格式" aria-label="Permalink to &quot;索引的格式&quot;">​</a></h2><p>在请求体里面传入设置或类型映射，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /my_index</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    &quot;settings&quot;: { ... any settings ... },</span></span>
<span class="line"><span>    &quot;mappings&quot;: {</span></span>
<span class="line"><span>        &quot;properties&quot;: { ... any properties ... }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><strong>settings</strong>: 用来设置分片,副本等配置信息</li><li><strong>mappings</strong>: 字段映射，类型等 <ul><li><strong>properties</strong>: 由于type在后续版本中会被Deprecated, 所以无需被type嵌套</li></ul></li></ul><h2 id="索引管理操作" tabindex="-1">索引管理操作 <a class="header-anchor" href="#索引管理操作" aria-label="Permalink to &quot;索引管理操作&quot;">​</a></h2><blockquote><p>我们通过kibana的devtool来学习索引的管理操作。</p></blockquote><h3 id="创建索引" tabindex="-1">创建索引 <a class="header-anchor" href="#创建索引" aria-label="Permalink to &quot;创建索引&quot;">​</a></h3><p>我们创建一个user 索引<code>test-index-users</code>，其中包含三个属性：name，age, remarks; 存储在一个分片一个副本上。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /test-index-users</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;settings&quot;: {</span></span>
<span class="line"><span>		&quot;number_of_shards&quot;: 1,</span></span>
<span class="line"><span>		&quot;number_of_replicas&quot;: 1</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>  &quot;mappings&quot;: {</span></span>
<span class="line"><span>    &quot;properties&quot;: {</span></span>
<span class="line"><span>      &quot;name&quot;: {</span></span>
<span class="line"><span>        &quot;type&quot;: &quot;text&quot;,</span></span>
<span class="line"><span>        &quot;fields&quot;: {</span></span>
<span class="line"><span>          &quot;keyword&quot;: {</span></span>
<span class="line"><span>            &quot;type&quot;: &quot;keyword&quot;,</span></span>
<span class="line"><span>            &quot;ignore_above&quot;: 256</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;age&quot;: {</span></span>
<span class="line"><span>        &quot;type&quot;: &quot;long&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;remarks&quot;: {</span></span>
<span class="line"><span>        &quot;type&quot;: &quot;text&quot;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>执行结果</p><p><img src="`+t+'" alt=""></p><ul><li><strong>插入测试数据</strong></li></ul><p><img src="'+i+'" alt=""></p><p>查看数据</p><p><img src="'+l+`" alt=""></p><ul><li>我们再<strong>测试下不匹配的数据类型</strong>(age)：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>POST /test-index-users/_doc</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;test user&quot;,</span></span>
<span class="line"><span>  &quot;age&quot;: &quot;error_age&quot;,</span></span>
<span class="line"><span>  &quot;remarks&quot;: &quot;hello eeee&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>你可以看到无法类型不匹配的错误：</p><p><img src="`+o+`" alt=""></p><h3 id="修改索引" tabindex="-1">修改索引 <a class="header-anchor" href="#修改索引" aria-label="Permalink to &quot;修改索引&quot;">​</a></h3><p>查看刚才的索引,<code>curl &#39;localhost:9200/_cat/indices?v&#39; | grep users</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yellow open test-index-users                          LSaIB57XSC6uVtGQHoPYxQ 1 1     1    0   4.4kb   4.4kb</span></span></code></pre></div><p>我们注意到刚创建的索引的状态是yellow的，因为我测试的环境是单点环境，无法创建副本，但是在上述<code>number_of_replicas</code>配置中设置了副本数是1； 所以在这个时候我们需要修改索引的配置。</p><p>修改副本数量为0</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /test-index-users/_settings</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;settings&quot;: {</span></span>
<span class="line"><span>    &quot;number_of_replicas&quot;: 0</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p><img src="`+c+'" alt=""></p><p>再次查看状态：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>green open test-index-users                          LSaIB57XSC6uVtGQHoPYxQ 1 1     1    0   4.4kb   4.4kb</span></span></code></pre></div><h3 id="打开-关闭索引" tabindex="-1">打开/关闭索引 <a class="header-anchor" href="#打开-关闭索引" aria-label="Permalink to &quot;打开/关闭索引&quot;">​</a></h3><ul><li><strong>关闭索引</strong></li></ul><p>一旦索引被关闭，那么这个索引只能显示元数据信息，<strong>不能够进行读写操作</strong>。</p><p><img src="'+r+'" alt=""></p><p>当关闭以后，再插入数据时：</p><p><img src="'+u+'" alt=""></p><ul><li><strong>打开索引</strong></li></ul><p><img src="'+d+'" alt=""></p><p>打开后又可以重新写数据了</p><p><img src="'+g+'" alt=""></p><h3 id="删除索引" tabindex="-1">删除索引 <a class="header-anchor" href="#删除索引" aria-label="Permalink to &quot;删除索引&quot;">​</a></h3><p>最后我们将创建的test-index-users删除。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DELETE /test-index-users</span></span></code></pre></div><p><img src="'+h+'" alt=""></p><h3 id="查看索引" tabindex="-1">查看索引 <a class="header-anchor" href="#查看索引" aria-label="Permalink to &quot;查看索引&quot;">​</a></h3><p>由于test-index-users被删除，所以我们看下之前bank的索引的信息</p><ul><li><strong>mapping</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GET /bank/_mapping</span></span></code></pre></div><p><img src="'+m+'" alt=""></p><ul><li><strong>settings</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GET /bank/_settings</span></span></code></pre></div><p><img src="'+b+'" alt=""></p><h2 id="kibana管理索引" tabindex="-1">Kibana管理索引 <a class="header-anchor" href="#kibana管理索引" aria-label="Permalink to &quot;Kibana管理索引&quot;">​</a></h2><p>在Kibana如下路径，我们可以查看和管理索引</p><p><img src="'+q+'" alt=""></p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/%5C_creating%5C_an%5C_index.html" target="_blank" rel="noreferrer">https://www.elastic.co/guide/cn/elasticsearch/guide/current/\\_creating\\_an\\_index.html</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html" target="_blank" rel="noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html" target="_blank" rel="noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html</a></p><p><a href="https://www.cnblogs.com/quanxiaoha/p/11515057.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/quanxiaoha/p/11515057.html</a></p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',71)]))}const T=a(v,[["render",_]]);export{P as __pageData,T as default};
