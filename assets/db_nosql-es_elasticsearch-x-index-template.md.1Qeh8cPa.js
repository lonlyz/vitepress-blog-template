import{_ as a,c as n,ai as p,o as e}from"./chunks/framework.BrYByd3F.js";const t="/vitepress-blog-template/images/db/es/es-index-template-1.png",l="/vitepress-blog-template/images/db/es/es-index-template-2.png",i="/vitepress-blog-template/images/db/es/es-index-template-3.png",o="/vitepress-blog-template/images/db/es/es-index-template-4.png",c="/vitepress-blog-template/images/db/es/es-index-template-5.png",_=JSON.parse('{"title":"ES详解 - 索引：索引模板(Index Template)详解","description":"","frontmatter":{},"headers":[],"relativePath":"db/nosql-es/elasticsearch-x-index-template.md","filePath":"db/nosql-es/elasticsearch-x-index-template.md","lastUpdated":1737706346000}'),u={name:"db/nosql-es/elasticsearch-x-index-template.md"};function r(q,s,d,m,h,g){return e(),n("div",null,s[0]||(s[0]=[p(`<h1 id="es详解-索引-索引模板-index-template-详解" tabindex="-1">ES详解 - 索引：索引模板(Index Template)详解 <a class="header-anchor" href="#es详解-索引-索引模板-index-template-详解" aria-label="Permalink to &quot;ES详解 - 索引：索引模板(Index Template)详解&quot;">​</a></h1><blockquote><p>前文介绍了索引的一些操作，特别是手动创建索引，但是批量和脚本化必然需要提供一种模板方式快速构建和管理索引，这就是本文要介绍的索引模板(Index Template)，它是一种告诉Elasticsearch在创建索引时如何配置索引的方法。为了更好的复用性，在7.8中还引入了组件模板。@pdai</p></blockquote><h2 id="索引模板" tabindex="-1">索引模板 <a class="header-anchor" href="#索引模板" aria-label="Permalink to &quot;索引模板&quot;">​</a></h2><blockquote><p>索引模板是一种告诉Elasticsearch在创建索引时如何配置索引的方法。</p></blockquote><ul><li><strong>使用方式</strong></li></ul><p>在创建索引之前可以先配置模板，这样在创建索引（手动创建索引或通过对文档建立索引）时，模板设置将用作创建索引的基础。</p><h3 id="模板类型" tabindex="-1">模板类型 <a class="header-anchor" href="#模板类型" aria-label="Permalink to &quot;模板类型&quot;">​</a></h3><p>模板有两种类型：<strong>索引模板</strong>和<strong>组件模板</strong>。</p><ol><li><strong>组件模板</strong>是可重用的构建块，用于配置映射，设置和别名；它们不会直接应用于一组索引。</li><li><strong>索引模板</strong>可以包含组件模板的集合，也可以直接指定设置，映射和别名。</li></ol><h3 id="索引模板中的优先级" tabindex="-1">索引模板中的优先级 <a class="header-anchor" href="#索引模板中的优先级" aria-label="Permalink to &quot;索引模板中的优先级&quot;">​</a></h3><ol><li>可组合模板优先于旧模板。如果没有可组合模板匹配给定索引，则旧版模板可能仍匹配并被应用。</li><li>如果使用显式设置创建索引并且该索引也与索引模板匹配，则创建索引请求中的设置将优先于索引模板及其组件模板中指定的设置。</li><li>如果新数据流或索引与多个索引模板匹配，则使用优先级最高的索引模板。</li></ol><h3 id="内置索引模板" tabindex="-1">内置索引模板 <a class="header-anchor" href="#内置索引模板" aria-label="Permalink to &quot;内置索引模板&quot;">​</a></h3><p>Elasticsearch具有内置索引模板，每个索引模板的优先级为100，适用于以下索引模式：</p><ol><li><code>logs-*-*</code></li><li><code>metrics-*-*</code></li><li><code>synthetics-*-*</code></li></ol><p>所以在涉及内建索引模板时，要避免索引模式冲突。更多可以参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index-templates.html" target="_blank" rel="noreferrer">这里在新窗口打开</a></p><h3 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h3><ul><li>首先<strong>创建两个索引组件模板</strong>：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT _component_template/component_template1</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;mappings&quot;: {</span></span>
<span class="line"><span>      &quot;properties&quot;: {</span></span>
<span class="line"><span>        &quot;@timestamp&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;date&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PUT _component_template/runtime_component_template</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;mappings&quot;: {</span></span>
<span class="line"><span>      &quot;runtime&quot;: { </span></span>
<span class="line"><span>        &quot;day_of_week&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;keyword&quot;,</span></span>
<span class="line"><span>          &quot;script&quot;: {</span></span>
<span class="line"><span>            &quot;source&quot;: &quot;emit(doc[&#39;@timestamp&#39;].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL, Locale.ROOT))&quot;</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>执行结果如下</p><p><img src="`+t+`" alt=""></p><ul><li><strong>创建使用组件模板的索引模板</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT _index_template/template_1</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;index_patterns&quot;: [&quot;bar*&quot;],</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;settings&quot;: {</span></span>
<span class="line"><span>      &quot;number_of_shards&quot;: 1</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;mappings&quot;: {</span></span>
<span class="line"><span>      &quot;_source&quot;: {</span></span>
<span class="line"><span>        &quot;enabled&quot;: true</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;properties&quot;: {</span></span>
<span class="line"><span>        &quot;host_name&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;keyword&quot;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;created_at&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;date&quot;,</span></span>
<span class="line"><span>          &quot;format&quot;: &quot;EEE MMM dd HH:mm:ss Z yyyy&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;aliases&quot;: {</span></span>
<span class="line"><span>      &quot;mydata&quot;: { }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;priority&quot;: 500,</span></span>
<span class="line"><span>  &quot;composed_of&quot;: [&quot;component_template1&quot;, &quot;runtime_component_template&quot;], </span></span>
<span class="line"><span>  &quot;version&quot;: 3,</span></span>
<span class="line"><span>  &quot;_meta&quot;: {</span></span>
<span class="line"><span>    &quot;description&quot;: &quot;my custom&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>执行结果如下</p><p><img src="`+l+'" alt=""></p><ul><li>创建一个匹配<code>bar*</code>的索引<code>bar-test</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /bar-test</span></span></code></pre></div><p>然后获取mapping</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GET /bar-test/_mapping</span></span></code></pre></div><p>执行结果如下</p><p><img src="'+i+'" alt=""></p><h2 id="模拟多组件模板" tabindex="-1">模拟多组件模板 <a class="header-anchor" href="#模拟多组件模板" aria-label="Permalink to &quot;模拟多组件模板&quot;">​</a></h2><blockquote><p>由于模板不仅可以由多个组件模板组成，还可以由索引模板自身组成；那么最终的索引设置将是什么呢？ElasticSearch设计者考虑到这个，提供了API进行模拟组合后的模板的配置。</p></blockquote><h3 id="模拟某个索引结果" tabindex="-1">模拟某个索引结果 <a class="header-anchor" href="#模拟某个索引结果" aria-label="Permalink to &quot;模拟某个索引结果&quot;">​</a></h3><p>比如上面的template_1, 我们不用创建bar*的索引(这里模拟bar-pdai-test)，也可以模拟计算出索引的配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>POST /_index_template/_simulate_index/bar-pdai-test</span></span></code></pre></div><p>执行结果如下</p><p><img src="'+o+`" alt=""></p><h3 id="模拟组件模板结果" tabindex="-1">模拟组件模板结果 <a class="header-anchor" href="#模拟组件模板结果" aria-label="Permalink to &quot;模拟组件模板结果&quot;">​</a></h3><p>当然，由于template_1模板是由两个组件模板组合的，我们也可以模拟出template_1被组合后的索引配置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>POST /_index_template/_simulate/template_1</span></span></code></pre></div><p>执行结果如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot; : {</span></span>
<span class="line"><span>    &quot;settings&quot; : {</span></span>
<span class="line"><span>      &quot;index&quot; : {</span></span>
<span class="line"><span>        &quot;number_of_shards&quot; : &quot;1&quot;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;mappings&quot; : {</span></span>
<span class="line"><span>      &quot;runtime&quot; : {</span></span>
<span class="line"><span>        &quot;day_of_week&quot; : {</span></span>
<span class="line"><span>          &quot;type&quot; : &quot;keyword&quot;,</span></span>
<span class="line"><span>          &quot;script&quot; : {</span></span>
<span class="line"><span>            &quot;source&quot; : &quot;emit(doc[&#39;@timestamp&#39;].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL, Locale.ROOT))&quot;,</span></span>
<span class="line"><span>            &quot;lang&quot; : &quot;painless&quot;</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;properties&quot; : {</span></span>
<span class="line"><span>        &quot;@timestamp&quot; : {</span></span>
<span class="line"><span>          &quot;type&quot; : &quot;date&quot;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;created_at&quot; : {</span></span>
<span class="line"><span>          &quot;type&quot; : &quot;date&quot;,</span></span>
<span class="line"><span>          &quot;format&quot; : &quot;EEE MMM dd HH:mm:ss Z yyyy&quot;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        &quot;host_name&quot; : {</span></span>
<span class="line"><span>          &quot;type&quot; : &quot;keyword&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;aliases&quot; : {</span></span>
<span class="line"><span>      &quot;mydata&quot; : { }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;overlapping&quot; : [ ]</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="模拟组件模板和自身模板结合后的结果" tabindex="-1">模拟组件模板和自身模板结合后的结果 <a class="header-anchor" href="#模拟组件模板和自身模板结合后的结果" aria-label="Permalink to &quot;模拟组件模板和自身模板结合后的结果&quot;">​</a></h3><ul><li>新建两个模板</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PUT /_component_template/ct1</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;settings&quot;: {</span></span>
<span class="line"><span>      &quot;index.number_of_shards&quot;: 2</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PUT /_component_template/ct2</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;settings&quot;: {</span></span>
<span class="line"><span>      &quot;index.number_of_replicas&quot;: 0</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;mappings&quot;: {</span></span>
<span class="line"><span>      &quot;properties&quot;: {</span></span>
<span class="line"><span>        &quot;@timestamp&quot;: {</span></span>
<span class="line"><span>          &quot;type&quot;: &quot;date&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>模拟在两个组件模板的基础上，添加自身模板的配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>POST /_index_template/_simulate</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;index_patterns&quot;: [&quot;my*&quot;],</span></span>
<span class="line"><span>  &quot;template&quot;: {</span></span>
<span class="line"><span>    &quot;settings&quot; : {</span></span>
<span class="line"><span>        &quot;index.number_of_shards&quot; : 3</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;composed_of&quot;: [&quot;ct1&quot;, &quot;ct2&quot;]</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>执行的结果如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;template&quot; : {</span></span>
<span class="line"><span>    &quot;settings&quot; : {</span></span>
<span class="line"><span>      &quot;index&quot; : {</span></span>
<span class="line"><span>        &quot;number_of_shards&quot; : &quot;3&quot;,</span></span>
<span class="line"><span>        &quot;number_of_replicas&quot; : &quot;0&quot;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;mappings&quot; : {</span></span>
<span class="line"><span>      &quot;properties&quot; : {</span></span>
<span class="line"><span>        &quot;@timestamp&quot; : {</span></span>
<span class="line"><span>          &quot;type&quot; : &quot;date&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    &quot;aliases&quot; : { }</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;overlapping&quot; : [ ]</span></span>
<span class="line"><span>}</span></span></code></pre></div><p><img src="`+c+'" alt=""></p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index-templates.html" target="_blank" rel="noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/index-templates.html</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/simulate-multi-component-templates.html" target="_blank" rel="noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/simulate-multi-component-templates.html</a></p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',54)]))}const v=a(u,[["render",r]]);export{_ as __pageData,v as default};
