import{_ as e,c as l,ai as t,o as n}from"./chunks/framework.BrYByd3F.js";const m=JSON.parse('{"title":"MySQL - 存储引擎","description":"","frontmatter":{},"headers":[],"relativePath":"db/sql-mysql/sql-mysql-engine.md","filePath":"db/sql-mysql/sql-mysql-engine.md","lastUpdated":1737706346000}'),o={name:"db/sql-mysql/sql-mysql-engine.md"};function p(i,a,r,s,d,c){return n(),l("div",null,a[0]||(a[0]=[t('<h1 id="mysql-存储引擎" tabindex="-1">MySQL - 存储引擎 <a class="header-anchor" href="#mysql-存储引擎" aria-label="Permalink to &quot;MySQL - 存储引擎&quot;">​</a></h1><blockquote><p>本文主要介绍MySQL中的存储引擎。</p></blockquote><h2 id="innodb" tabindex="-1">InnoDB <a class="header-anchor" href="#innodb" aria-label="Permalink to &quot;InnoDB&quot;">​</a></h2><p>是 MySQL 默认的事务型存储引擎，<strong>只有在需要它不支持的特性时，才考虑使用其它存储引擎</strong>。</p><p>实现了四个标准的隔离级别，默认级别是可重复读(REPEATABLE READ)。在可重复读隔离级别下，通过多版本并发控制(MVCC)+ 间隙锁(Next-Key Locking)防止幻影读。</p><p>主索引是聚簇索引，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。</p><p>内部做了很多优化，包括从磁盘读取数据时采用的可预测性读、能够加快读操作并且自动创建的自适应哈希索引、能够加速插入操作的插入缓冲区等。</p><p>支持真正的在线热备份。其它存储引擎不支持在线热备份，要获取一致性视图需要停止对所有表的写入，而在读写混合场景中，停止写入可能也意味着停止读取。</p><h2 id="myisam" tabindex="-1">MyISAM <a class="header-anchor" href="#myisam" aria-label="Permalink to &quot;MyISAM&quot;">​</a></h2><p>设计简单，数据以紧密格式存储。对于只读数据，或者表比较小、可以容忍修复操作，则依然可以使用它。</p><p>提供了大量的特性，包括压缩表、空间数据索引等。</p><p><strong>不支持事务</strong>。</p><p>不支持行级锁，只能对整张表加锁，读取时会对需要读到的所有表加共享锁，写入时则对表加排它锁。但在表有读取操作的同时，也可以往表中插入新的记录，这被称为并发插入(CONCURRENT INSERT)。</p><p>可以手工或者自动执行检查和修复操作，但是和事务恢复以及崩溃恢复不同，可能导致一些数据丢失，而且修复操作是非常慢的。</p><p>如果指定了 DELAY_KEY_WRITE 选项，在每次修改执行完成时，不会立即将修改的索引数据写入磁盘，而是会写到内存中的键缓冲区，只有在清理键缓冲区或者关闭表的时候才会将对应的索引块写入磁盘。这种方式可以极大的提升写入性能，但是在数据库或者主机崩溃时会造成索引损坏，需要执行修复操作。</p><h2 id="比较" tabindex="-1">比较 <a class="header-anchor" href="#比较" aria-label="Permalink to &quot;比较&quot;">​</a></h2><ul><li><p>事务: InnoDB 是事务型的，可以使用 Commit 和 Rollback 语句。</p></li><li><p>并发: MyISAM 只支持表级锁，而 InnoDB 还支持行级锁。</p></li><li><p>外键: InnoDB 支持外键。</p></li><li><p>备份: InnoDB 支持在线热备份。</p></li><li><p>崩溃恢复: MyISAM 崩溃后发生损坏的概率比 InnoDB 高很多，而且恢复的速度也更慢。</p></li><li><p>其它特性: MyISAM 支持压缩表和空间数据索引。</p></li></ul><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',18)]))}const q=e(o,[["render",p]]);export{m as __pageData,q as default};
