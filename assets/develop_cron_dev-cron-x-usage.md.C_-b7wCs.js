import{_ as o,c as t,ai as d,o as l}from"./chunks/framework.BrYByd3F.js";const u=JSON.parse('{"title":"CRON表达式 - CRON表达式介绍和使用","description":"","frontmatter":{},"headers":[],"relativePath":"develop/cron/dev-cron-x-usage.md","filePath":"develop/cron/dev-cron-x-usage.md","lastUpdated":1737706346000}'),a={name:"develop/cron/dev-cron-x-usage.md"};function r(i,e,c,p,n,h){return l(),t("div",null,e[0]||(e[0]=[d('<h1 id="cron表达式-cron表达式介绍和使用" tabindex="-1">CRON表达式 - CRON表达式介绍和使用 <a class="header-anchor" href="#cron表达式-cron表达式介绍和使用" aria-label="Permalink to &quot;CRON表达式 - CRON表达式介绍和使用&quot;">​</a></h1><blockquote><p>定时任务和CRON表达式在开发中使用也非常广泛，本文整理了CRON表达式和常见使用例子。@pdai</p></blockquote><h2 id="什么是cron" tabindex="-1">什么是Cron <a class="header-anchor" href="#什么是cron" aria-label="Permalink to &quot;什么是Cron&quot;">​</a></h2><blockquote><p>来自<a href="https://baike.baidu.com/item/cron/10952601" target="_blank" rel="noreferrer">百度百科在新窗口打开</a></p></blockquote><p>计划任务，是任务在约定的时间执行已经计划好的工作，这是表面的意思。在Linux中，我们经常用到 cron 服务器来完成这项工作。cron服务器可以根据配置文件约定的时间来执行特定的任务。</p><p>Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：</p><ul><li>Seconds Minutes Hours DayofMonth Month DayofWeek Year</li><li>Seconds Minutes Hours DayofMonth Month DayofWeek</li></ul><h2 id="cron表达式的结构" tabindex="-1">Cron表达式的结构 <a class="header-anchor" href="#cron表达式的结构" aria-label="Permalink to &quot;Cron表达式的结构&quot;">​</a></h2><p>Cron表达式是一个具有时间含义的字符串，字符串以5个空格隔开，分为6个域，格式为X X X X X X。其中X是一个域的占位符。单个域有多个取值时，使用半角逗号,隔开取值。每个域可以是确定的取值，也可以是具有逻辑意义的特殊字符。</p><h3 id="域取值" tabindex="-1">域取值 <a class="header-anchor" href="#域取值" aria-label="Permalink to &quot;域取值&quot;">​</a></h3><p>下表为Cron表达式中六个域能够取的值以及支持的特殊字符。</p><table tabindex="0"><thead><tr><th>域</th><th>是否必需</th><th>取值范围</th><th>特殊字符</th></tr></thead><tbody><tr><td>秒 Seconds</td><td>是</td><td>[0, 59]</td><td>* , - /</td></tr><tr><td>分钟 Minutes</td><td>是</td><td>[0, 59]</td><td>* , - /</td></tr><tr><td>小时 Hours</td><td>是</td><td>[0, 23]</td><td>* , - /</td></tr><tr><td>日期 DayofMonth</td><td>是</td><td>[1, 31]</td><td>* , - / ? L W</td></tr><tr><td>月份 Month</td><td>是</td><td>[1, 12]或[JAN, DEC]</td><td>* , - /</td></tr><tr><td>星期 DayofWeek</td><td>是</td><td>[1, 7]或[MON, SUN]。若使用[1, 7]表达方式，1代表星期一，7代表星期日。</td><td>* , - / ? L #</td></tr><tr><td>年 Year</td><td>否</td><td>1970+</td><td>- * /</td></tr></tbody></table><h3 id="特殊字符" tabindex="-1">特殊字符 <a class="header-anchor" href="#特殊字符" aria-label="Permalink to &quot;特殊字符&quot;">​</a></h3><p>每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是：</p><ul><li><p><code>*</code>：表示匹配该域的任意值。假如在Minutes域使用*, 即表示每分钟都会触发事件。</p></li><li><p><code>?</code>：只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 * ?, 其中最后一位只能用？，而不能使用*，如果使用*表示不管星期几都会触发，实际上并不是这样。</p></li><li><p><code>-</code>：表示范围。例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次</p></li><li><p><code>/</code>：表示起始时间开始触发，然后每隔固定时间触发一次。例如在Minutes域使用5/20,则意味着5分钟触发一次，而25，45等分别触发一次.</p></li><li><p><code>,</code>：表示列出枚举值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。</p></li><li><p><code>L</code>：表示最后，只能出现在DayofWeek和DayofMonth域。如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。</p></li><li><p><code>W</code>:表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 。</p></li><li><p><code>LW</code>:这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。</p></li><li><p><code>#</code>:用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。</p></li></ul><h2 id="常用表达式例子" tabindex="-1">常用表达式例子 <a class="header-anchor" href="#常用表达式例子" aria-label="Permalink to &quot;常用表达式例子&quot;">​</a></h2><ul><li><p><code>0 0 2 1 * ? *</code> 表示在每月的1日的凌晨2点调整任务</p></li><li><p><code>0 15 10 ? * MON-FRI</code> 表示周一到周五每天上午10:15执行作业</p></li><li><p><code>0 15 10 ? 6L 2002-2006</code> 表示2002-2006年的每个月的最后一个星期五上午10:15执行作</p></li><li><p><code>0 0 10,14,16 * * ?</code> 每天上午10点，下午2点，4点</p></li><li><p><code>0 0/30 9-17 * * ?</code> 朝九晚五工作时间内每半小时</p></li><li><p><code>0 0 12 ? * WED</code> 表示每个星期三中午12点</p></li><li><p><code>0 0 12 * * ?</code> 每天中午12点触发</p></li><li><p><code>0 15 10 ? * *</code> 每天上午10:15触发</p></li><li><p><code>0 15 10 * * ?</code> 每天上午10:15触发</p></li><li><p><code>0 15 10 * * ? *</code> 每天上午10:15触发</p></li><li><p><code>0 15 10 * * ? 2005</code> 2005年的每天上午10:15触发</p></li><li><p><code>0 * 14 * * ?</code> 在每天下午2点到下午2:59期间的每1分钟触发</p></li><li><p><code>0 0/5 14 * * ?</code> 在每天下午2点到下午2:55期间的每5分钟触发</p></li><li><p><code>0 0/5 14,18 * * ?</code> 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发</p></li><li><p><code>0 0-5 14 * * ?</code> 在每天下午2点到下午2:05期间的每1分钟触发</p></li><li><p><code>0 10,44 14 ? 3 WED</code> 每年三月的星期三的下午2:10和2:44触发</p></li><li><p><code>0 15 10 ? * MON-FRI</code> 周一至周五的上午10:15触发</p></li><li><p><code>0 15 10 15 * ?</code> 每月15日上午10:15触发</p></li><li><p><code>0 15 10 L * ?</code> 每月最后一日的上午10:15触发</p></li><li><p><code>0 15 10 ? * 6L</code> 每月的最后一个星期五上午10:15触发</p></li><li><p><code>0 15 10 ? * 6L 2002-2005</code> 2002年至2005年的每月的最后一个星期五上午10:15触发</p></li><li><p><code>0 15 10 ? * 6#3</code> 每月的第三个星期五上午10:15触发</p></li></ul><p>注：</p><ul><li><strong>有些子表达式能包含一些范围或列表</strong></li></ul><p>例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”</p><ul><li><strong><code>*</code>字符代表所有可能的值</strong></li></ul><p>因此，<code>*</code>在子表达式（月）里表示每个月的含义，<code>*</code>在子表达式（天（星期））表示星期的每一天</p><ul><li><strong><code>/</code>字符用来指定数值的增量</strong></li></ul><p>例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟</p><p>在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样</p><ul><li><strong><code>？</code>字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值</strong></li></ul><p>当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”</p><ul><li><strong><code>L</code>字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写</strong></li></ul><p>但是它在两个子表达式里的含义是不同的：</p><ol><li>在天（月）子表达式中，“L”表示一个月的最后一天</li><li>在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT</li></ol><p>如果在“L”前有具体的内容，它就具有其他的含义了</p><p>例如：“6L”表示这个月的倒数第６天，“FRIL”表示这个月的最一个星期五</p><p>注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题</p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p>本文主要整理自：</p><p><a href="https://baike.baidu.com/item/cron/10952601" target="_blank" rel="noreferrer">百度百科在新窗口打开</a></p><p><a href="https://help.aliyun.com/knowledge%5C_detail/64769.html" target="_blank" rel="noreferrer">https://help.aliyun.com/knowledge\\_detail/64769.html</a></p><p><a href="https://www.cnblogs.com/javahr/p/8318728.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/javahr/p/8318728.html</a></p><p><a href="https://www.bejson.com/othertools/cron/" target="_blank" rel="noreferrer">https://www.bejson.com/othertools/cron/</a></p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',40)]))}const f=o(a,[["render",r]]);export{u as __pageData,f as default};
