import{_ as e,c as r,ai as t,o}from"./chunks/framework.BrYByd3F.js";const u=JSON.parse('{"title":"常用开发库 - Google Guava包","description":"","frontmatter":{},"headers":[],"relativePath":"develop/package/dev-package-x-google-guava.md","filePath":"develop/package/dev-package-x-google-guava.md","lastUpdated":1737706346000}'),l={name:"develop/package/dev-package-x-google-guava.md"};function i(n,a,s,h,g,c){return o(),r("div",null,a[0]||(a[0]=[t(`<h1 id="常用开发库-google-guava包" tabindex="-1">常用开发库 - Google Guava包 <a class="header-anchor" href="#常用开发库-google-guava包" aria-label="Permalink to &quot;常用开发库 - Google Guava包&quot;">​</a></h1><blockquote><p>Google出品的common包，我比较常用的比如Guava缓存等。@pdai</p></blockquote><h2 id="google-guava简介" tabindex="-1">Google Guava简介 <a class="header-anchor" href="#google-guava简介" aria-label="Permalink to &quot;Google Guava简介&quot;">​</a></h2><p>Guava工程包含了若干被Google的 Java项目广泛依赖 的核心库，例如：集合 [collections] 、缓存 [caching] 、原生类型支持 [primitives support] 、并发库 [concurrency libraries] 、通用注解 [common annotations] 、字符串处理 [string processing] 、I/O 等等。 所有这些工具每天都在被Google的工程师应用在产品服务中。</p><p>guava的优点：</p><ul><li>高效设计良好的API，被Google的开发者设计，实现和使用</li><li>遵循高效的java语法实践</li><li>使代码更刻度，简洁，简单</li><li>节约时间，资源，提高生产力</li></ul><h2 id="推荐网址" tabindex="-1">推荐网址 <a class="header-anchor" href="#推荐网址" aria-label="Permalink to &quot;推荐网址&quot;">​</a></h2><ul><li><a href="https://github.com/google/guava/wiki/Home" target="_blank" rel="noreferrer">Guava Wiki在新窗口打开</a></li><li><a href="https://guava.dev/releases/snapshot-jre/api/docs/" target="_blank" rel="noreferrer">Guava API Doc在新窗口打开</a></li><li><a href="https://github.com/google/guava" target="_blank" rel="noreferrer">Guava Github在新窗口打开</a></li><li><a href="http://ifeve.com/google-guava/" target="_blank" rel="noreferrer">Guava 中文教程 - ifeve.com在新窗口打开</a> 看这里</li></ul><h2 id="使用guava" tabindex="-1">使用Guava <a class="header-anchor" href="#使用guava" aria-label="Permalink to &quot;使用Guava&quot;">​</a></h2><p>注意：JDK 1.8 or higher.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>  &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span></span>
<span class="line"><span>  &lt;artifactId&gt;guava&lt;/artifactId&gt;</span></span>
<span class="line"><span>  &lt;version&gt;28.2-jre&lt;/version&gt;</span></span>
<span class="line"><span>  &lt;!-- or, for Android: --&gt;</span></span>
<span class="line"><span>  &lt;version&gt;28.2-android&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><h2 id="内容简介" tabindex="-1">内容简介 <a class="header-anchor" href="#内容简介" aria-label="Permalink to &quot;内容简介&quot;">​</a></h2><h3 id="基本工具-basic-utilities" tabindex="-1">基本工具 [Basic utilities] <a class="header-anchor" href="#基本工具-basic-utilities" aria-label="Permalink to &quot;基本工具 \\[Basic utilities\\]&quot;">​</a></h3><p>让使用Java语言变得更舒适</p><p>1.1 <a href="http://ifeve.com/google-guava-using-and-avoiding-null/" target="_blank" rel="noreferrer">使用和避免null在新窗口打开</a>：null是模棱两可的，会引起令人困惑的错误，有些时候它让人很不舒服。很多Guava工具类用快速失败拒绝null值，而不是盲目地接受</p><p>1.2 <a href="http://ifeve.com/google-guava-preconditions/" target="_blank" rel="noreferrer">前置条件在新窗口打开</a>: 让方法中的条件检查更简单</p><p>1.3 <a href="http://ifeve.com/google-guava-commonobjectutilities/" target="_blank" rel="noreferrer">常见Object方法在新窗口打开</a>: 简化Object方法实现，如hashCode()和toString()</p><p>1.4 <a href="http://ifeve.com/google-guava-ordering/" target="_blank" rel="noreferrer">排序在新窗口打开</a>: Guava强大的”流畅风格比较器”</p><p>1.5 <a href="http://ifeve.com/google-guava-throwables/" target="_blank" rel="noreferrer">Throwables在新窗口打开</a>：简化了异常和错误的传播与检查</p><h3 id="集合-collections" tabindex="-1">集合[Collections] <a class="header-anchor" href="#集合-collections" aria-label="Permalink to &quot;集合\\[Collections\\]&quot;">​</a></h3><p>Guava对JDK集合的扩展，这是Guava最成熟和为人所知的部分</p><p>2.1 <a href="http://ifeve.com/google-guava-immutablecollections/" target="_blank" rel="noreferrer">不可变集合在新窗口打开</a>: 用不变的集合进行防御性编程和性能提升。</p><p>2.2 <a href="http://ifeve.com/google-guava-newcollectiontypes/" target="_blank" rel="noreferrer">新集合类型在新窗口打开</a>: multisets, multimaps, tables, bidirectional maps等</p><p>2.3 <a href="http://ifeve.com/google-guava-collectionutilities/" target="_blank" rel="noreferrer">强大的集合工具类在新窗口打开</a>: 提供java.util.Collections中没有的集合工具</p><p>2.4 [扩展工具类](<a href="http://ifeve.com/google-guava-collectionhelpersexplained/%EF%BC%9A%E8%AE%A9%E5%AE%9E%E7%8E%B0%E5%92%8C%E6%89%A9%E5%B1%95%E9%9B%86%E5%90%88%E7%B1%BB%E5%8F%98%E5%BE%97%E6%9B%B4%E5%AE%B9%E6%98%93%EF%BC%8C%E6%AF%94%E5%A6%82%E5%88%9B%E5%BB%BACollection%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8%EF%BC%8C%E6%88%96%E5%AE%9E%E7%8E%B0%E8%BF%AD%E4%BB%A3%E5%99%A8" target="_blank" rel="noreferrer">http://ifeve.com/google-guava-collectionhelpersexplained/：让实现和扩展集合类变得更容易，比如创建Collection的装饰器，或实现迭代器</a></p><h3 id="缓存-caches" tabindex="-1">缓存[Caches] <a class="header-anchor" href="#缓存-caches" aria-label="Permalink to &quot;缓存\\[Caches\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-cachesexplained/" target="_blank" rel="noreferrer">Guava Cache在新窗口打开</a>：本地缓存实现，支持多种缓存过期策略</p><h3 id="函数式风格-functional-idioms" tabindex="-1">函数式风格[Functional idioms] <a class="header-anchor" href="#函数式风格-functional-idioms" aria-label="Permalink to &quot;函数式风格\\[Functional idioms\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-functional/" target="_blank" rel="noreferrer">Guava的函数式支持在新窗口打开</a>可以显著简化代码，但请谨慎使用它</p><h3 id="并发-concurrency" tabindex="-1">并发[Concurrency] <a class="header-anchor" href="#并发-concurrency" aria-label="Permalink to &quot;并发\\[Concurrency\\]&quot;">​</a></h3><p>强大而简单的抽象，让编写正确的并发代码更简单</p><p>5.1 <a href="http://ifeve.com/google-guava-listenablefuture/" target="_blank" rel="noreferrer">ListenableFuture在新窗口打开</a>：完成后触发回调的Future</p><p>5.2 <a href="http://ifeve.com/google-guava-serviceexplained/" target="_blank" rel="noreferrer">Service框架在新窗口打开</a>：抽象可开启和关闭的服务，帮助你维护服务的状态逻辑</p><h3 id="字符串处理-strings" tabindex="-1">字符串处理[Strings] <a class="header-anchor" href="#字符串处理-strings" aria-label="Permalink to &quot;字符串处理\\[Strings\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-strings/" target="_blank" rel="noreferrer">字符串处理在新窗口打开</a>: 非常有用的字符串工具，包括分割、连接、填充等操作</p><h3 id="原生类型-primitives" tabindex="-1">原生类型[Primitives] <a class="header-anchor" href="#原生类型-primitives" aria-label="Permalink to &quot;原生类型\\[Primitives\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-primitives/" target="_blank" rel="noreferrer">原生类型在新窗口打开</a>: 扩展 JDK 未提供的原生类型（如int、char）操作， 包括某些类型的无符号形式</p><h3 id="区间-ranges" tabindex="-1">区间[Ranges] <a class="header-anchor" href="#区间-ranges" aria-label="Permalink to &quot;区间\\[Ranges\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-ranges/" target="_blank" rel="noreferrer">区间在新窗口打开</a>: 可比较类型的区间API，包括连续和离散类型</p><h3 id="i-o" tabindex="-1">I/O <a class="header-anchor" href="#i-o" aria-label="Permalink to &quot;I/O&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-io/" target="_blank" rel="noreferrer">I/O在新窗口打开</a>: 简化I/O尤其是I/O流和文件的操作，针对Java5和6版本</p><h3 id="散列-hash" tabindex="-1">散列[Hash] <a class="header-anchor" href="#散列-hash" aria-label="Permalink to &quot;散列\\[Hash\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-hashing/" target="_blank" rel="noreferrer">散列在新窗口打开</a>: 提供比Object.hashCode()更复杂的散列实现，并提供布鲁姆过滤器的实现</p><h3 id="事件总线-eventbus" tabindex="-1">事件总线[EventBus] <a class="header-anchor" href="#事件总线-eventbus" aria-label="Permalink to &quot;事件总线\\[EventBus\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-eventbus/" target="_blank" rel="noreferrer">事件总线在新窗口打开</a>:发布-订阅模式的组件通信，但组件不需要显式地注册到其他组件中</p><h3 id="数学运算-math" tabindex="-1">数学运算[Math] <a class="header-anchor" href="#数学运算-math" aria-label="Permalink to &quot;数学运算\\[Math\\]&quot;">​</a></h3><p><a href="http://ifeve.com/google-guava-math/" target="_blank" rel="noreferrer">数学运算在新窗口打开</a>:优化的、充分测试的数学工具类</p><h3 id="反射-reflection" tabindex="-1">反射[Reflection] <a class="header-anchor" href="#反射-reflection" aria-label="Permalink to &quot;反射\\[Reflection\\]&quot;">​</a></h3><p><a href="http://ifeve.com/guava-reflection/" target="_blank" rel="noreferrer">反射在新窗口打开</a>: Guava 的 Java 反射机制工具类</p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><ul><li><a href="http://ifeve.com/google-guava/" target="_blank" rel="noreferrer">http://ifeve.com/google-guava/</a></li></ul><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>`,52)]))}const v=e(l,[["render",i]]);export{u as __pageData,v as default};
