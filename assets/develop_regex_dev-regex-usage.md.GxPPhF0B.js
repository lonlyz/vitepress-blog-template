import{_ as e,c as d,ai as s,o as l}from"./chunks/framework.BrYByd3F.js";const r=JSON.parse('{"title":"正则表达式 - 常用正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"develop/regex/dev-regex-usage.md","filePath":"develop/regex/dev-regex-usage.md","lastUpdated":1737706346000}'),a={name:"develop/regex/dev-regex-usage.md"};function o(t,i,c,n,h,p){return l(),d("div",null,i[0]||(i[0]=[s(`<h1 id="正则表达式-常用正则表达式" tabindex="-1">正则表达式 - 常用正则表达式 <a class="header-anchor" href="#正则表达式-常用正则表达式" aria-label="Permalink to &quot;正则表达式 - 常用正则表达式&quot;">​</a></h1><blockquote><p>在学习了正则表达式知识点之后，通常使用正则表达式推荐你本文总结的常用的正则表达式，能覆盖80%的应用场景，如果没有通过再下一篇的工具自己写和校验。</p></blockquote><h2 id="校验数字的表达式" tabindex="-1">校验数字的表达式 <a class="header-anchor" href="#校验数字的表达式" aria-label="Permalink to &quot;校验数字的表达式&quot;">​</a></h2><ul><li>数字：<code>^[0-9]*$</code></li><li>n位的数字：<code>^\\d{n}$</code></li><li>至少n位的数字：<code>^\\d{n,}$</code></li><li>m-n位的数字：<code>^\\d{m,n}$</code></li><li>零和非零开头的数字：<code>^(0|[1-9][0-9]*)$</code></li><li>非零开头的最多带两位小数的数字：<code>^([1-9][0-9]*)+(\\.[0-9]{1,2})?$</code></li><li>带1-2位小数的正数或负数：<code>^(\\-)?\\d+(\\.\\d{1,2})$</code></li><li>正数、负数、和小数：<code>^(\\-|\\+)?\\d+(\\.\\d+)?$</code></li><li>有两位小数的正实数：<code>^[0-9]+(\\.[0-9]{2})?$</code></li><li>有1~3位小数的正实数：<code>^[0-9]+(\\.[0-9]{1,3})?$</code></li><li>非零的正整数：<code>^[1-9]\\d*$ 或 ^([1-9][0-9]*){1,3}$</code> 或 <code>^\\+?[1-9][0-9]*$</code></li><li>非零的负整数：<code>^\\-[1-9][]0-9&quot;*$</code> 或 <code>^-[1-9]\\d*$</code></li><li>非负整数：<code>^\\d+$</code> 或 <code>^[1-9]\\d*|0$</code></li><li>非正整数：<code>^-[1-9]\\d*|0$</code> 或 <code>^((-\\d+)|(0+))$</code></li><li>非负浮点数：<code>^\\d+(\\.\\d+)?$</code> 或 <code>^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$</code></li><li>非正浮点数：<code>^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$</code> 或 <code>^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$</code></li><li>正浮点数：<code>^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$</code> 或 <code>^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.+ [0-9]+)|([0-9]*[1-9][0-9]*))$</code></li><li>负浮点数：<code>^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$</code> 或 <code>^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</code></li><li>浮点数：<code>^(-?\\d+)(\\.\\d+)?$</code> 或 <code>^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$</code></li></ul><h2 id="校验字符的表达式" tabindex="-1">校验字符的表达式 <a class="header-anchor" href="#校验字符的表达式" aria-label="Permalink to &quot;校验字符的表达式&quot;">​</a></h2><ul><li>汉字：<code>^[\\u4e00-\\u9fa5]{0,}$</code></li><li>英文和数字：<code>^[A-Za-z0-9]+$</code> 或 <code>^[A-Za-z0-9]{4,40}$</code></li><li>长度为3-20的所有字符：<code>^.{3,20}$</code></li><li>由26个英文字母组成的字符串：<code>^[A-Za-z]+$</code></li><li>由26个大写英文字母组成的字符串：<code>^[A-Z]+$</code></li><li>由26个小写英文字母组成的字符串：<code>^[a-z]+$</code></li><li>由数字和26个英文字母组成的字符串：<code>^[A-Za-z0-9]+$</code></li><li>由数字、26个英文字母或者下划线组成的字符串：<code>^\\w+$ 或 ^\\w{3,20}$</code></li><li>中文、英文、数字包括下划线：<code>^[\\u4E00-\\u9FA5A-Za-z0-9_]+$</code></li><li>中文、英文、数字但不包括下划线等符号：<code>^[\\u4E00-\\u9FA5A-Za-z0-9]+$</code> 或 <code>^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$</code></li><li>可以输入含有<code>^%&amp;&#39;,;=?$\\&quot;</code>等字符：<code>[^%&amp;&#39;,;=?$\\x22]+</code></li><li>禁止输入含有<code>~</code>的字符：<code>[^~\\x22]+</code></li></ul><h2 id="特殊需求表达式" tabindex="-1">特殊需求表达式 <a class="header-anchor" href="#特殊需求表达式" aria-label="Permalink to &quot;特殊需求表达式&quot;">​</a></h2><ul><li>Email地址：<code>^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$</code></li><li>域名：<code>[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\\.?</code></li><li>InternetURL：<code>[a-zA-z]+://[^\\s]*</code> 或 <code>^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$</code></li><li>手机号码：<code>^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$</code></li><li>电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：<code>^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$</code></li><li>国内电话号码(0511-4405222、021-87888822)：<code>\\d{3}-\\d{8}|\\d{4}-\\d{7}</code></li><li>电话号码正则表达式（支持手机号码，3-4位区号，7-8位直播号码，1－4位分机号）: <code>((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)</code></li><li>身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X：<code>(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)</code></li><li>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：<code>^[a-zA-Z][a-zA-Z0-9_]{4,15}$</code></li><li>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：<code>^[a-zA-Z]\\w{5,17}$</code></li><li>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：<code>^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,10}$</code></li><li>强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：<code>^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$</code></li><li>日期格式：<code>^\\d{4}-\\d{1,2}-\\d{1,2}</code></li><li>一年的12个月(01～09和1～12)：<code>^(0?[1-9]|1[0-2])$</code></li><li>一个月的31天(01～09和1～31)：<code>^((0?[1-9])|((1|2)[0-9])|30|31)$</code></li><li>钱的输入格式： <ul><li>有四种钱的表示形式我们可以接受:&quot;10000.00&quot; 和 &quot;10,000.00&quot;, 和没有 &quot;分&quot; 的 &quot;10000&quot; 和 &quot;10,000&quot;：<code>^[1-9][0-9]*$</code></li><li>这表示任意一个不以0开头的数字,但是,这也意味着一个字符&quot;0&quot;不通过,所以我们采用下面的形式：<code>^(0|[1-9][0-9]*)$</code></li><li>一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：<code>^(0|-?[1-9][0-9]*)$</code></li><li>这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧。下面我们要加的是说明可能的小数部分：<code>^[0-9]+(.[0-9]+)?$</code></li><li>必须说明的是,小数点后面至少应该有1位数,所以&quot;10.&quot;是不通过的,但是 &quot;10&quot; 和 &quot;10.2&quot; 是通过的：<code>^[0-9]+(.[0-9]{2})?$</code></li><li>这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：<code>^[0-9]+(.[0-9]{1,2})?$</code></li><li>这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：<code>^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$</code></li><li>1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：<code>^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$</code></li><li>备注：这就是最终结果了,别忘了&quot;+&quot;可以用&quot;*&quot;替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</li></ul></li><li>xml文件：<code>^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\\\.[x|X][m|M][l|L]$</code></li><li>中文字符的正则表达式：<code>[\\u4e00-\\u9fa5]</code></li><li>双字节字符：<code>[^\\x00-\\xff]</code> (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</li><li>空白行的正则表达式：<code>\\n\\s*\\r</code> (可以用来删除空白行)</li><li>HTML标记的正则表达式：<code>&lt;(\\S*?)[^&gt;]*&gt;.*?|&lt;.*? /&gt;</code> ( 首尾空白字符的正则表达式：<code>^\\s*|\\s*$</code>或<code>(^\\s*)|(\\s*$)</code> (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</li><li>腾讯QQ号：<code>[1-9][0-9]{4,}</code> (腾讯QQ号从10000开始)</li><li>中国邮政编码：<code>[1-9]\\d{5}(?!\\d)</code> (中国邮政编码为6位数字)</li><li>IP地址：<code>((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))</code></li></ul><h2 id="使用案例" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例" aria-label="Permalink to &quot;使用案例&quot;">​</a></h2><ul><li><p>模板字符串匹配 <code>/\\{\\{(.*?)\\}\\}/g</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;标题&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subTitle: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;副标题&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;内容&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这是一段内容，标题是{{title}}，副标题是{{subTitle}}，内容是{{content}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\{\\{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(.*?)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\}\\}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reg, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data[key]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li></ul><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>`,11)]))}const E=e(a,[["render",o]]);export{r as __pageData,E as default};
