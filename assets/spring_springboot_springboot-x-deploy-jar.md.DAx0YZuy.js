import{_ as r,c as t,ai as o,o as e}from"./chunks/framework.BrYByd3F.js";const p="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-8.png",s="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-1.png",i="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-2.png",n="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-3.png",l="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-4.png",g="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-5.png",b="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-6.png",c="/vitepress-blog-template/images/spring/springboot/springboot-x-jar-7.png",q=JSON.parse('{"title":"▶SpringBoot应用部署 - 打包成jar部署","description":"","frontmatter":{},"headers":[],"relativePath":"spring/springboot/springboot-x-deploy-jar.md","filePath":"spring/springboot/springboot-x-deploy-jar.md","lastUpdated":1737706346000}'),d={name:"spring/springboot/springboot-x-deploy-jar.md"};function h(m,a,u,j,_,k){return e(),t("div",null,a[0]||(a[0]=[o(`<h1 id="▶springboot应用部署-打包成jar部署" tabindex="-1">▶SpringBoot应用部署 - 打包成jar部署 <a class="header-anchor" href="#▶springboot应用部署-打包成jar部署" aria-label="Permalink to &quot;▶SpringBoot应用部署 - 打包成jar部署&quot;">​</a></h1><blockquote><p>我们知道spring-boot-starter-web默认已经集成了web容器（tomcat)，在部署前只需要将项目打包成jar即可。那么怎么将springboot web项目打包成jar呢？本文主要介绍常见的几种方式。@pdai</p></blockquote><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>我们知道spring-boot-starter-web默认已经集成了web容器（tomcat)，在部署前只需要将项目打包成jar即可。那么怎么将springboot web项目打包成jar呢？</p><h2 id="打包成jar" tabindex="-1">打包成jar <a class="header-anchor" href="#打包成jar" aria-label="Permalink to &quot;打包成jar&quot;">​</a></h2><blockquote><p>这里以一个Helloworld项目（<a href="https://pdai.tech/md/spring/springboot/springboot-x-hello-world.html" target="_blank" rel="noreferrer">SpringBoot入门 - 创建第一个Hello world工程</a>）为例打包成jar。</p></blockquote><h3 id="通过maven打包成jar" tabindex="-1">通过Maven打包成jar <a class="header-anchor" href="#通过maven打包成jar" aria-label="Permalink to &quot;通过Maven打包成jar&quot;">​</a></h3><blockquote><p>通过Maven打包成jar，最为常用，因为可以脚本化，这是所有自动化部署的前提。</p></blockquote><p>首先， 在pom中使用SpringBoot的build插件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;build&gt;</span></span>
<span class="line"><span>    &lt;plugins&gt;</span></span>
<span class="line"><span>        &lt;plugin&gt;</span></span>
<span class="line"><span>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span>
<span class="line"><span>        &lt;/plugin&gt;</span></span>
<span class="line"><span>    &lt;/plugins&gt;</span></span>
<span class="line"><span>&lt;/build&gt;</span></span></code></pre></div><p>然后通过如下步骤进行build</p><p><img src="`+p+'" alt="error.图片加载失败"></p><h3 id="通过idea打包成jar" tabindex="-1">通过Idea打包成jar <a class="header-anchor" href="#通过idea打包成jar" aria-label="Permalink to &quot;通过Idea打包成jar&quot;">​</a></h3><blockquote><p>此外一些IDE工具也集成了打包的功能，我们看下如下通过idea打包成jar。</p></blockquote><ol><li>File栏选择Project Structure</li></ol><p><img src="'+s+'" alt="error.图片加载失败"></p><ol start="2"><li>在Artifacts下添加jar</li></ol><p><img src="'+i+'" alt="error.图片加载失败"></p><ol start="3"><li>选择module，main class等</li></ol><p><img src="'+n+'" alt="error.图片加载失败"></p><ol start="4"><li>确认编译后的jar输出位置</li></ol><p><img src="'+l+'" alt="error.图片加载失败"></p><ol start="5"><li>进行build</li></ol><p><img src="'+g+'" alt="error.图片加载失败"></p><p>点击build/rebuild</p><p><img src="'+b+'" alt="error.图片加载失败"></p><ol start="6"><li>编译后的jar</li></ol><p><img src="'+c+'" alt="error.图片加载失败"></p><h2 id="进一步理解" tabindex="-1">进一步理解 <a class="header-anchor" href="#进一步理解" aria-label="Permalink to &quot;进一步理解&quot;">​</a></h2><blockquote><p>通过几个问题进一步理解。</p></blockquote><h3 id="如何将三方jar打包进来" tabindex="-1">如何将三方jar打包进来？ <a class="header-anchor" href="#如何将三方jar打包进来" aria-label="Permalink to &quot;如何将三方jar打包进来？&quot;">​</a></h3><blockquote><p>在项目中我们经常需要使用第三方的Jar，比如某些SDK，这些SDK没有直接发布到公开的maven仓库中，这种情况下如何使用这些三方JAR呢？</p></blockquote><p>请参看：<a href="https://pdai.tech/md/spring/springboot/springboot-x-deploy-jar-3rd.html" target="_blank" rel="noreferrer">SpringBoot应用部署 - 使用第三方JAR包</a></p><h3 id="如何打包成war包呢" tabindex="-1">如何打包成war包呢？ <a class="header-anchor" href="#如何打包成war包呢" aria-label="Permalink to &quot;如何打包成war包呢？&quot;">​</a></h3><p>请参看：<a href="https://pdai.tech/md/spring/springboot/springboot-x-deploy-war.html" target="_blank" rel="noreferrer">SpringBoot应用部署 - 打包成war部署</a></p><h3 id="如何打包成docker镜像呢" tabindex="-1">如何打包成docker镜像呢？ <a class="header-anchor" href="#如何打包成docker镜像呢" aria-label="Permalink to &quot;如何打包成docker镜像呢？&quot;">​</a></h3><p>请参看：<a href="https://pdai.tech/md/spring/springboot/springboot-x-deploy-docker.html" target="_blank" rel="noreferrer">SpringBoot应用部署 - 打包成docker镜像</a></p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',38)]))}const x=r(d,[["render",h]]);export{q as __pageData,x as default};
