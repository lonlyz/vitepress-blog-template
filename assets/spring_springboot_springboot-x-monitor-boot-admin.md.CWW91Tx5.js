import{_ as a,c as s,ai as p,o as t}from"./chunks/framework.BrYByd3F.js";const i="/vitepress-blog-template/images/spring/springboot/springboot-admin-1.png",e="/vitepress-blog-template/images/spring/springboot/springboot-admin-2.png",o="/vitepress-blog-template/images/spring/springboot/springboot-admin-9.png",r="/vitepress-blog-template/images/spring/springboot/springboot-admin-3.png",l="/vitepress-blog-template/images/spring/springboot/springboot-admin-4.png",c="/vitepress-blog-template/images/spring/springboot/springboot-admin-5.png",g="/vitepress-blog-template/images/spring/springboot/springboot-admin-6.png",d="/vitepress-blog-template/images/spring/springboot/springboot-admin-7.png",b="/vitepress-blog-template/images/spring/springboot/springboot-admin-8.png",h="/vitepress-blog-template/images/spring/springboot/springboot-admin-10.png",m="/vitepress-blog-template/images/spring/springboot/springboot-admin-11.png",u="/vitepress-blog-template/images/spring/springboot/springboot-admin-12.png",C=JSON.parse('{"title":"SpringBoot监控 - 集成springboot admin监控工具","description":"","frontmatter":{},"headers":[],"relativePath":"spring/springboot/springboot-x-monitor-boot-admin.md","filePath":"spring/springboot/springboot-x-monitor-boot-admin.md","lastUpdated":1737706346000}'),v={name:"spring/springboot/springboot-x-monitor-boot-admin.md"};function S(k,n,f,y,A,_){return t(),s("div",null,n[0]||(n[0]=[p('<h1 id="springboot监控-集成springboot-admin监控工具" tabindex="-1">SpringBoot监控 - 集成springboot admin监控工具 <a class="header-anchor" href="#springboot监控-集成springboot-admin监控工具" aria-label="Permalink to &quot;SpringBoot监控 - 集成springboot admin监控工具&quot;">​</a></h1><blockquote><p>上文中展示了SpringBoot提供了Actuator对应用进行监控和管理， 而Spring Boot Admin能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。 本文主要介绍springboot admin以及SpringBoot和springboot admin的集成。@pdai</p></blockquote><h2 id="知识准备" tabindex="-1">知识准备 <a class="header-anchor" href="#知识准备" aria-label="Permalink to &quot;知识准备&quot;">​</a></h2><blockquote><p>需要了解Spring Boot Admin和actuator之间的关系等。</p></blockquote><h3 id="什么是spring-boot-admin-和actuator是什么关系" tabindex="-1">什么是Spring Boot Admin？和actuator是什么关系？ <a class="header-anchor" href="#什么是spring-boot-admin-和actuator是什么关系" aria-label="Permalink to &quot;什么是Spring Boot Admin？和actuator是什么关系？&quot;">​</a></h3><blockquote><p>Spring Boot Admin能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。</p></blockquote><ul><li><strong>Spring Boot Admin提供的主要功能</strong></li></ul><ol><li>显示健康状况</li><li>显示详细信息，例如 <ol><li>JVM和内存指标</li><li>micrometer.io指标</li><li>数据源指标</li><li>缓存指标</li></ol></li><li>显示构建信息编号</li><li>关注并下载日志文件</li><li>查看jvm系统和环境属性</li><li>查看Spring Boot配置属性</li><li>支持Spring Cloud的postable / env-和/ refresh-endpoint</li><li>轻松的日志级管理</li><li>与JMX-beans交互</li><li>查看线程转储</li><li>查看http跟踪</li><li>查看auditevents</li><li>查看http-endpoints</li><li>查看计划任务</li><li>查看和删除活动会话（使用spring-session）</li><li>查看Flyway / Liquibase数据库迁移</li><li>下载heapdump</li><li>状态变更通知（通过电子邮件，Slack，Hipchat，…）</li><li>状态更改的事件日志（非持久性）</li></ol><p>更多的可以<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noreferrer">参考在新窗口打开</a></p><ul><li><strong>Spring Boot Admin不是Spring团队提供的模块</strong>？</li></ul><p>它是由Codecentric公司创建的，代码在<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noreferrer">Github： spring-boot-admin在新窗口打开</a>上。</p><ul><li><strong>Spring Boot Admin和actuator是什么关系？</strong></li></ul><p>从如下POM的依赖关系可以看出Spring Boot Admin本质上集成了actuator，将实时警报，此外添加一些实时警报功能等。</p><p><img src="'+i+`" alt="error.图片加载失败"></p><h3 id="springboot-admin的client和server" tabindex="-1">SpringBoot Admin的Client和Server？ <a class="header-anchor" href="#springboot-admin的client和server" aria-label="Permalink to &quot;SpringBoot Admin的Client和Server？&quot;">​</a></h3><blockquote><p>Spring Boot Admin（简称SBA）由两部分组成：<strong>SBA Server</strong>和<strong>SBA Client</strong>。</p></blockquote><p><strong>SBA Server</strong>： 包括Admin用户界面并独立运行于被监控应用</p><p><strong>SBA Client</strong>： 提供一种方式将被监控应用注册到 SBA Server</p><ul><li><strong>为什么Spring Boot Admin设计上会分为Server和Client两个部分</strong>？</li></ul><ol><li>首先，Spring Boot Admin做的是集中化的监控（比如应用的集群，多个服务或者微服务等），而不是每个应用都需要有一个UI。</li><li>其次，被监控的应用应该是和监控平台是分离的，比如Client应用会挂掉，这时候Server监控依然正常运行并发现和报警Client的异常状态。</li><li>再者，还要考虑和其它语言应用，其它平台等的集成等。</li></ol><ul><li><strong>只能通过SBA Client注册到SBA Server吗</strong>？</li></ul><p>并不是， 除了SBA Client， SBA 还支持:</p><ol><li>Spring Cloud Discovery: 为了支持一些微服务框架如SpringCloud等（因为微服务框架中已经包含了服务发现和注册模块）</li><li>Python Applications Using Pyctuator: 为了支持其它语言开发的应用，比如Python</li></ol><h2 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">​</a></h2><blockquote><p>本例子主要展示SBA Server + SBA Client注册的方式。</p></blockquote><h3 id="启用sba-server" tabindex="-1">启用SBA Server <a class="header-anchor" href="#启用sba-server" aria-label="Permalink to &quot;启用SBA Server&quot;">​</a></h3><p>pom引入包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;2.5.3&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>通过@EnableAdminServer注解启用SBA Server</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/**</span></span>
<span class="line"><span> * @author pdai</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Configuration</span></span>
<span class="line"><span>@EnableAdminServer</span></span>
<span class="line"><span>@SpringBootApplication</span></span>
<span class="line"><span>public class SpringBootHelloWorldApplication {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    /**</span></span>
<span class="line"><span>     * main interface.</span></span>
<span class="line"><span>     *</span></span>
<span class="line"><span>     * @param args args</span></span>
<span class="line"><span>     */</span></span>
<span class="line"><span>    public static void main(String[] args) {</span></span>
<span class="line"><span>        SpringApplication.run(SpringBootHelloWorldApplication.class, args);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre></div><p>这样你便可以打开如下网址查看Server UI，很显然目前没有客户端注册上来。</p><p><img src="`+e+`" alt="error.图片加载失败"></p><h3 id="注册client" tabindex="-1">注册Client <a class="header-anchor" href="#注册client" aria-label="Permalink to &quot;注册Client&quot;">​</a></h3><p>这里采用Spring Boot Admin Client注册的方式。</p><p>引入SBA Client的pom依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;de.codecentric&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-admin-starter-client&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;2.5.3&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>添加配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  boot:</span></span>
<span class="line"><span>    admin:</span></span>
<span class="line"><span>      client:</span></span>
<span class="line"><span>        url: &#39;http://localhost:8080&#39;</span></span>
<span class="line"><span>management:</span></span>
<span class="line"><span>  endpoints:</span></span>
<span class="line"><span>    enabled-by-default: true</span></span>
<span class="line"><span>    web:</span></span>
<span class="line"><span>      base-path: /manage</span></span>
<span class="line"><span>      exposure:</span></span>
<span class="line"><span>        include: &#39;*&#39;</span></span></code></pre></div><h3 id="演示效果" tabindex="-1">演示效果 <a class="header-anchor" href="#演示效果" aria-label="Permalink to &quot;演示效果&quot;">​</a></h3><p>打开 <code>http://localhost:8080/wallboard</code></p><p><img src="`+o+'" alt="error.图片加载失败"></p><p>左侧是主要功能：</p><p>Insight - Details</p><p><img src="'+r+'" alt="error.图片加载失败"></p><p>Insight - Metrics</p><p><img src="'+l+'" alt="error.图片加载失败"></p><p>Insight - Configurations</p><p><img src="'+c+'" alt="error.图片加载失败"></p><p>Loggers</p><p><img src="'+g+'" alt="error.图片加载失败"></p><p>JVM</p><p><img src="'+d+'" alt="error.图片加载失败"></p><p>Mappings</p><p><img src="'+b+`" alt="error.图片加载失败"></p><h2 id="进一步理解" tabindex="-1">进一步理解 <a class="header-anchor" href="#进一步理解" aria-label="Permalink to &quot;进一步理解&quot;">​</a></h2><blockquote><p>我们再通过一些问题来帮助你更深入理解SBA， 更详细的内容可以参考<a href="https://codecentric.github.io/spring-boot-admin/current" target="_blank" rel="noreferrer">官网文档在新窗口打开</a>。@pdai</p></blockquote><h3 id="如何启用jmx管理" tabindex="-1">如何启用JMX管理？ <a class="header-anchor" href="#如何启用jmx管理" aria-label="Permalink to &quot;如何启用JMX管理？&quot;">​</a></h3><p>默认下SBA没有启用JMX，需要通过如下配置启用。</p><p>首先需要引入POM依赖（PS：需要SpringBoot2.2+ 版本）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.jolokia&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;jolokia-core&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>启用JMX</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>spring:</span></span>
<span class="line"><span>  jmx:</span></span>
<span class="line"><span>    enabled: true</span></span></code></pre></div><p>刷新SBA UI就可以看到增加了JMX相关的连接</p><p><img src="`+h+`" alt="error.图片加载失败"></p><h3 id="如何显示日志内容" tabindex="-1">如何显示日志内容？ <a class="header-anchor" href="#如何显示日志内容" aria-label="Permalink to &quot;如何显示日志内容？&quot;">​</a></h3><p>默认下没有显示Log File的内容，如果需要显示SpringBoot应用日志需要进行如下配置（配置logging.file.path 或者logging.file.name）。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>logging:</span></span>
<span class="line"><span>  file:</span></span>
<span class="line"><span>    name: &#39;pdai-spring-boot-application.log&#39;</span></span>
<span class="line"><span>  pattern:</span></span>
<span class="line"><span>    file: &#39;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(\${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx&#39;</span></span></code></pre></div><p>刷新SBA UI就可以看到增加了日志文件相关的连接</p><p><img src="`+m+`" alt="error.图片加载失败"></p><h3 id="如何继承spring-security" tabindex="-1">如何继承Spring Security？ <a class="header-anchor" href="#如何继承spring-security" aria-label="Permalink to &quot;如何继承Spring Security？&quot;">​</a></h3><p>可以通过如下继承spring-boot-starter-security</p><p>添加pom依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>添加HttpSecurity配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@Configuration</span></span>
<span class="line"><span>public static class SecurityPermitAllConfig extends WebSecurityConfigurerAdapter {</span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    protected void configure(HttpSecurity http) throws Exception {</span></span>
<span class="line"><span>        http.authorizeRequests().anyRequest().permitAll()  </span></span>
<span class="line"><span>            .and().csrf().disable();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>其它安全相关配置可以参考<a href="https://codecentric.github.io/spring-boot-admin/current/#securing-spring-boot-admin" target="_blank" rel="noreferrer">官网文档在新窗口打开</a></p><h3 id="如何通知告警信息" tabindex="-1">如何通知告警信息？ <a class="header-anchor" href="#如何通知告警信息" aria-label="Permalink to &quot;如何通知告警信息？&quot;">​</a></h3><p>可以通过集成 spring-boot-starter-mail 配置JavaMailSender 来用邮件通知信息。</p><p>添加pom依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div><p>添加配置信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>spring.mail.host=smtp.example.com</span></span>
<span class="line"><span>spring.boot.admin.notify.mail.to=admin@example.com</span></span></code></pre></div><p>除了邮件通知这种，内置还支持很多其他方式以及支持自定义notification，比如钉钉，微信通知等</p><p><img src="`+u+'" alt="error.图片加载失败"></p><h2 id="源码示例" tabindex="-1">源码示例 <a class="header-anchor" href="#源码示例" aria-label="Permalink to &quot;源码示例&quot;">​</a></h2><p><a href="https://github.com/realpdai/tech-pdai-spring-demos" target="_blank" rel="noreferrer">https://github.com/realpdai/tech-pdai-spring-demos</a></p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noreferrer">https://github.com/codecentric/spring-boot-admin</a></p><p><a href="https://codecentric.github.io/spring-boot-admin/current" target="_blank" rel="noreferrer">https://codecentric.github.io/spring-boot-admin/current</a></p><p>本文转自 <a href="https://pdai.tech" target="_blank" rel="noreferrer">https://pdai.tech</a>，如有侵权，请联系删除。</p>',90)]))}const q=a(v,[["render",S]]);export{C as __pageData,q as default};
